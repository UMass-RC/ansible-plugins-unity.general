---
####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# FIXME these results assume clustershell is present

- block:
    - name: tempfile
      tempfile:
      register: tempfile

    - name: run test playbooks
      include_role:
        name: callback
      vars:
        tests:
          - name: basic diff
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_DIFF_ALWAYS: 'true'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: Create file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar

                  - name: Modify file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar
                        Bar baz bam!
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [Create file] *************************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -0,0 +1 @@",
                "+Foo bar",
                "",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [Modify file] *************************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1 +1,2 @@",
                " Foo bar",
                "+Bar baz bam!",
                "",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: dedupe diff
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_DIFF_ALWAYS: 'true'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: dedupegroup
                gather_facts: false
                tasks:
                  - name: Create file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: "{{ '{{ dedupe_me }}' }}"
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [dedupegroup] *************************************************************",
                "",
                "TASK [Create file] *************************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1,2 +1 @@",
                "-Foo bar", # content from previous task
                "-Bar baz bam!", # content from previous task
                "+bar",
                "\\ No newline at end of file",
                "",
                "changed: dedupe3",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1,2 +1 @@",
                "-Foo bar", # content from previous task
                "-Bar baz bam!", # content from previous task
                "+foo",
                "\\ No newline at end of file",
                "",
                "changed: dedupe[1-2]",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "dedupe1                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe2                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe3                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: normal loop
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            # I do sha1 because dedupe removes the item from the result and counts them as duplicates
            # I do `!unsafe` because ansible wants to expand j2 templating when the `callback` role iterates over
            # `tests`, and then I think it tries to expand it a second time, which is why I can still use
            # the `{[ '{{ foo }}' }}` trick above but not here
            playbook: !unsafe |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug:
                        msg: "{{ item | sha1 }}"
                    loop:
                      - foo
                      - bar
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK (item=foo) =>",
                "  msg: {{ 'foo' | sha1 }}",
                "[testhost]: OK (item=bar) =>",
                "  msg: {{ 'bar' | sha1 }}",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: multiple plays
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: skipped (no hosts matched) on 1st play
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: emptygroup
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [emptygroup] **************************************************************",
                "skipping: no hosts matched",
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: skipped (no hosts matched) on 2nd play
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: emptygroup
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY [emptygroup] **************************************************************",
                "skipping: no hosts matched",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   "
            ]

          - name: skipped (when=false) 1st task
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                    when: false
                  - name: bar
                    debug: msg='bar'
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "skipped: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   ",
                "",
                ""
            ]

          - name: skipped (when=false) 2nd task
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                  - name: bar
                    debug: msg='bar'
                    when: false
            regex_replacements:
              - ['elapsed: [\d\.]+', 'elapsed: <omitted>']
            expected_output: [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [bar] *********************************************************************",
                "skipped: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   ",
                "",
                ""
            ]

          - name: fatal no hosts matched
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: |
              - hosts: nonexistent
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
            expected_output: []

          - name: start-at-task nonexistent
            environment:
              ANSIBLE_NOCOLOR: 'true'
              ANSIBLE_FORCE_COLOR: 'false'
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            extra_args: --start-at-task=nonexistent
            allow_non_empty_stderr: true
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                  - name: bar
                    debug: msg='bar'
            expected_output: [
              "",
              "PLAY [testhost] ****************************************************************",
              "",
              "PLAY RECAP *********************************************************************"
            ]

  always:
    - name: delete tempfile
      file:
        path: "{{ tempfile.path }}"
        state: absent
