---
####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# FIXME these results assume clustershell is present

- block:
    - name: tempfile
      tempfile:
      register: tempfile
      no_log: true

    - name: run test playbooks
      include_role:
        name: callback
      vars:
        tests:
          - name: basic diff
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: create file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar

                  - name: overwrite file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar
                        Bar baz bam!
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [create file] *************************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -0,0 +1 @@",
                "+Foo bar",
                "",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [overwrite file] **********************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1 +1,2 @@",
                " Foo bar",
                "+Bar baz bam!",
                "",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: formatted diff
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
              DIFF_FORMATTER: sed -E 's/Foo/REPLACED/g'
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: create file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar

                  - name: overwrite file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: |
                        Foo bar
                        Bar baz bam!
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [create file] *************************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1,2 +1 @@",
                " REPLACED bar",
                "-Bar baz bam!",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [overwrite file] **********************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1 +1,2 @@",
                " REPLACED bar",
                "+Bar baz bam!",
                "changed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: dedupe diff
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: dedupegroup
                gather_facts: false
                tasks:
                  - name: overwrite file
                    copy:
                      dest: "{{ tempfile.path }}"
                      content: "{{ '{{ dedupe_me }}' }}"
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output: [
                "",
                "PLAY [dedupegroup] *************************************************************",
                "",
                "TASK [overwrite file] **********************************************************",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1,2 +1 @@",
                "-Foo bar", # content from previous task
                "-Bar baz bam!", # content from previous task
                "+bar",
                "\\ No newline at end of file",
                "",
                "changed: dedupe3",
                "--- before: {{ tempfile.path }}",
                "+++ after: {{ tempfile.path }}",
                "@@ -1,2 +1 @@",
                "-Foo bar", # content from previous task
                "-Bar baz bam!", # content from previous task
                "+foo",
                "\\ No newline at end of file",
                "",
                "changed: dedupe[1-2]",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "dedupe1                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe2                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe3                    : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: dedupe normal loop
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            # I do sha1 because dedupe removes the item from the result and counts them as duplicates
            # I do `!unsafe` because ansible wants to expand j2 templating when the `callback` role iterates over
            # `tests`, and then I think it tries to expand it a second time, which is why I can still use
            # the `{[ '{{ foo }}' }}` trick above but not here
            playbook: !unsafe |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug:
                        msg: "{{ item | sha1 }}"
                    loop:
                      - foo
                      - foo
                      - bar
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK (item=foo) =>",
                "  msg: {{ 'foo' | sha1 }}",
                '[testhost]: OK (item=foo) => same result as "testhost (item=foo)"',
                "[testhost]: OK (item=bar) =>",
                "  msg: {{ 'bar' | sha1 }}",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          # once upon a time I relied on the size of the loop variable to determine the number of runners that would be spawned
          # this was a bad idea because the loop variable might just be an un-expanded j2 template string
          - name: dedupe normal loop over a variable
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            # I do sha1 because dedupe removes the item from the result and counts them as duplicates
            # I do `!unsafe` because ansible wants to expand j2 templating when the `callback` role iterates over
            # `tests`, and then I think it tries to expand it a second time, which is why I can still use
            # the `{[ '{{ foo }}' }}` trick above but not here
            playbook: !unsafe |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - set_fact:
                      loopvar:
                        - foo
                        - foo
                        - bar
                  - name: foo
                    debug:
                        msg: "{{ item | sha1 }}"
                    loop: "{{ loopvar }}"
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [set_fact] ****************************************************************",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK (item=foo) =>",
                "  msg: {{ 'foo' | sha1 }}",
                '[testhost]: OK (item=foo) => same result as "testhost (item=foo)"',
                "[testhost]: OK (item=bar) =>",
                "  msg: {{ 'bar' | sha1 }}",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: don't display non verbose OK results
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: |
              - hosts: dedupegroup
                gather_facts: false
                tasks:
                  - name: noop
                    ansible.builtin.assert: { that: true, quiet: true }
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [dedupegroup] *************************************************************",
                "",
                "TASK [noop] ********************************************************************",
                "ok: dedupe[1-3]",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "dedupe1                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe2                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "dedupe3                    : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: dedupe errors
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_nonzero_exit_code: true
            playbook: !unsafe |
              - hosts: dedupegroup
                gather_facts: false
                tasks:
                  - name: fail
                    fail:
                      msg: "{{ dedupe_me }}"
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [dedupegroup] *************************************************************",
                "",
                "TASK [fail] ********************************************************************",
                "[dedupe1]: FAILED =>",
                "  changed: false",
                "  msg: foo",
                '[dedupe2]: FAILED => same result as "dedupe1"',
                "[dedupe3]: FAILED =>",
                "  changed: false",
                "  msg: bar",
                "failed: dedupe[1-3]",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "dedupe1                    : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   ",
                "dedupe2                    : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   ",
                "dedupe3                    : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: dedupe errors in list items
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: !unsafe |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: fail
                    fail:
                      msg: "{{ item | sha1 }}"
                    loop:
                      - foo
                      - foo
                      - bar
                      - bar
                      - baz
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [fail] ********************************************************************",
                "[testhost]: FAILED (item=foo) =>",
                "  ansible_loop_var: item",
                "  changed: false",
                "  item: foo",
                "  msg: {{ 'foo' | sha1 }}",
                '[testhost]: FAILED (item=foo) => same result as "testhost (item=foo)"',
                "[testhost]: FAILED (item=bar) =>",
                "  ansible_loop_var: item",
                "  changed: false",
                "  item: bar",
                "  msg: {{ 'bar' | sha1 }}",
                '[testhost]: FAILED (item=bar) => same result as "testhost (item=bar)"',
                "[testhost]: FAILED (item=baz) =>",
                "  ansible_loop_var: item",
                "  changed: false",
                "  item: baz",
                "  msg: {{ 'baz' | sha1 }}",
                "[testhost]: FAILED =>",
                "  changed: false",
                "  msg: One or more items failed",
                "failed: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: multiple plays
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: skipped (no hosts matched) on 1st play
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: emptygroup
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [emptygroup] **************************************************************",
                "skipping: no hosts matched",
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: skipped (no hosts matched) on 2nd play
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
              - hosts: emptygroup
                gather_facts: false
                tasks:
                  - name: bar
                    debug: msg='bar'
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY [emptygroup] **************************************************************",
                "skipping: no hosts matched",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: skipped (when=false) 1st task
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                    when: false
                  - name: bar
                    debug: msg='bar'
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "skipped: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [bar] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: bar",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   ",
                "",
                "",
              ]

          - name: skipped (when=false) 2nd task
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                  - name: bar
                    debug: msg='bar'
                    when: false
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "TASK [foo] *********************************************************************",
                "[testhost]: OK =>",
                "  msg: foo",
                "ok: testhost",
                "elapsed: <omitted> seconds",
                "",
                "TASK [bar] *********************************************************************",
                "skipped: testhost",
                "elapsed: <omitted> seconds",
                "",
                "PLAY RECAP *********************************************************************",
                "testhost                   : ok=1    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   ",
                "",
                "",
              ]

          # sleep_seconds is defined for each host in targets/callback/inventory.yml
          # I used to use timeout=3 but I saw a `sleep 1` marked as interrupted so I increased to timeout=4
          - name: interrupted
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            playbook: !unsafe |
              - hosts: dedupegroup
                gather_facts: false
                tasks:
                  - name: overwrite file
                    command:
                      cmd: "sleep {{ sleep_seconds }}"
                    changed_when: false
            timeout: 4
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            sed_E_command: 's/elapsed: [0-9\.]+/elapsed: <omitted>/'
            expected_output:
              [
                "",
                "PLAY [dedupegroup] *************************************************************",
                "",
                "TASK [overwrite file] **********************************************************",
                "ok: dedupe[1-2]",
                "interrupted: dedupe3",
                "elapsed: <omitted> seconds",
                "",
              ]

          - name: fatal no hosts matched
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            allow_non_empty_stderr: true
            allow_nonzero_exit_code: true
            playbook: |
              - hosts: nonexistent
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
            expected_output: []

          - name: start-at-task nonexistent
            environment:
              ANSIBLE_NOCOLOR: "true"
              ANSIBLE_FORCE_COLOR: "false"
              ANSIBLE_DIFF_ALWAYS: "true"
              ANSIBLE_PYTHON_INTERPRETER: "{{ ansible_python_interpreter }}"
              ANSIBLE_STDOUT_CALLBACK: unity.general.deduped_default
            extra_args: --start-at-task=nonexistent
            allow_non_empty_stderr: true
            playbook: |
              - hosts: testhost
                gather_facts: false
                tasks:
                  - name: foo
                    debug: msg='foo'
                  - name: bar
                    debug: msg='bar'
            expected_output:
              [
                "",
                "PLAY [testhost] ****************************************************************",
                "",
                "PLAY RECAP *********************************************************************",
                "",
                "",
              ]

  always:
    - name: delete tempfile
      file:
        path: "{{ tempfile.path }}"
        state: absent
      no_log: true
